JAVA 06-06-2024.


JAVA  ABSTRACTION : 

ABSTRACT CLASS :
1. Abstract class can have abstract and non-abstract methods.
2. Abstract class doesn't support multiple inheritance.
3. Abstract class can have final , non-final , static and non-static variables.
4. Abstract class can provide the implementation of interface.
5. The abstract keyword is used to declare abstract class.
6. An abstract class can extend another java class and implement multiple java interfaces.
7. An abstract class can be extended using keyword "extends".
8. A java abstract class can have class members like private, protected, etc.
9. Example : 
Public abstract class Shape {
public abstract void draw();
}


  - ABSTRACTION : is the process of hiding certain details and showing only essential information to the user. (OR) the process of taking away or removing

 - ABSTRACT : it is a brief summary of a research article, thesis, review, conference proceeding, or any in-depth analysis of a particular subject and is often used to help the reader quickly ascertain the paper's purpose.

 - abstraction can be achieved with either abstract classes or interfaces.
 



-ABSTRACT CLASS : 

-it is a restricted class that cannot be used to create object

-to access it, it must be inherited from another class.

- abstract class can have both abstract and regular methods



-ABSTRACT METHOD : 

- it can only be used in an abstract class, and it does not have a body. the body is provided by the subclass(inherited from).




For example :


abstract class Animal {
  public abstract void animalSound();
  public void sleep() {
      System.out.println("Zzz");
   } 
 }


here it is not possible to create an object of the Animal class 



// Abstract class
abstract class Animal {
  // Abstract method (does not have a body)
  public abstract void animalSound();
  // Regular method
  public void sleep() {
    System.out.println("Zzz");
  }
}

// Subclass (inherit from Animal)
class Pig extends Animal {
  public void animalSound() {
    // The body of animalSound() is provided here
    System.out.println("The pig says: wee wee");
  }
}

class Main {
  public static void main(String[] args) {
    Pig myPig = new Pig(); // Create a Pig object
    myPig.animalSound();
    myPig.sleep();
  }
}










JAVA  INTERFACE : 



1. Interface can have only abstract methods. Since java 8,it can have default and static methods also.
2. Interface supports multiple inheritance.
3. Interface has only static and final variables.
4. Interface can't provide the implementation of abstract class.
5. The interface keyword is used to declare interface.
6. An interface can extend another java interface only.
7. An interface can be implemented using keyword "implements".
8. Members of a java interface are public by default.
9. Example : 
public interface Drawable{
void draw();
}




- interface is the another way to achieve abstraction in java ,is with interfaces.




















  